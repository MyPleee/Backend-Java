<?xml version="1.0"?>
<!-- ======================================================================= -->
<!-- Author : Heesom                                                         -->
<!-- Date	: 2024.07.05                                                     -->
<!-- ======================================================================= -->


<!-- ======================================================================= -->
<!-- TO SET : Set project name as you intended								 -->
<!-- ======================================================================= -->
<project name="test-heesom" default="copy" basedir=".">
    <!-- Product name and version properties -->
    <property name="product.name" value="test_server"/>
    <property name="product.version.major" value="0"/>
    <property name="product.version.minor" value="0"/>
    <property name="product.version"
              value="${product.version.major}.${product.version.minor}"/>
    <property name="product_version"
              value="${product.version.major}_${product.version.minor}"/>
    <property name="year" value="2024"/>
    <property name="copyright"
              value="Copyright ${year}"/>

	<!-- =================================================================== -->
	<!-- Properties Setting													 -->
	<!-- =================================================================== -->
	<property environment="env"/>

	<property name="src.dir" value="${basedir}\src"/>
	
	<!-- ./build/classes, ./build/deploy -->
	<property name="build.dir" value="${basedir}\build"/>
	<property name="build.lib.dir" value="${basedir}\lib"/>
	<property name="build.classes.dir" value="${build.dir}\classes"/>
	
	<property name="build.deploy.dir" value="${build.dir}\deploy"/>
	<property name="final.deploy.dir" value="${basedir}\webapps\ROOT\WEB-INF\lib"/>
	<property name="server.deploy.dir" value="D:\Tomcat\heesom_my_test\webapps\ROOT\WEB-INF\lib"/>

	<property name="pkg.base.dir" value="ple"/>


	<!-- web.xm, .properties -->
	<property name="base.conf.dir" value="${basedir}\conf"/>
	<property name="server.classes.dir" value="D:\Tomcat\heesom_my_test\webapps\ROOT\WEB-INF\classes"/>
	<property name="base.webinf.dir" value="${basedir}\webapps\ROOT\WEB-INF"/>
	<property name="server.webinf.dir" value="D:\Tomcat\heesom_my_test\webapps\ROOT\WEB-INF"/>

	<!-- test_server-0_0.jar -->
	<property name="jar.name" value="${product.name}-${product_version}.jar"/>

    <!-- =================================================================== -->
    <!-- TO SET : Set jar file directory to deploy here                      -->
    <!-- =================================================================== -->
    
	<!-- =================================================================== -->
	<!-- Build Classpath													 -->
	<!-- =================================================================== -->
	
	<path id="classpath">
		<!--fileset dir="./lib"-->
		
		<!-- ./lib에 있는 jar을 다 ./build/classes으로 복사???-->
		<fileset dir="${build.lib.dir}">
			<include name="**\*.jar"/>
		</fileset>
		
		<!-- 현재 디렉토리에 있는 클래스 파일이나 리소스 파일을 쉽게 참조할 수 있도록 함 해당 베이스 디렉토리 안에 있는 class파일을 다 참조할 수 있음-->
		<pathelement location="."/>
		<pathelement location="${build.classes.dir}"/>
		
	    <!-- heesom으로 시작하는 패키지는 test 패키지 임으로 빌드시 제외 -->

	</path>

	<property name="build.classpath" refid="classpath"/>
	
	
    <!-- =================================================================== -->
    <!-- Init the build system                                               -->
    <!-- =================================================================== -->
    <target name="init">
        <echo message=""/>
        <echo message="------------------------------------------------------------------"/>
        <echo message="----- ${product.name} v${product_version} [${year}] -----"/>
        <echo message="------------------------------------------------------------------"/>
        <echo message="Building with ${ant.version}"/>
        <echo message="Java ${java.version} located at ${java.home} "/>
        <echo message="------------------------------------------------------------------"/>
        <echo message=""/>
    </target>


    <!-- =================================================================== -->
    <!-- Prepares the build directory                                        -->
    <!-- =================================================================== -->
	

    <target name="prepare" depends="init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.classes.dir}"/>
        <mkdir dir="${build.deploy.dir}"/>
    </target>
	
    <!-- =================================================================== -->
    <!-- Compiles the source code                                            -->
    <!-- =================================================================== -->
	
	<target name="compile" depends="prepare">
		<javac srcdir="${src.dir}"
			destdir="${build.classes.dir}"
			debug="on"
			deprecation="on"
			optimize="off"
			encoding="utf-8" 
			classpath="${build.classpath}">
		</javac>
		
		<echo message="classpath=${build.classpath}"/>
        <echo message="src.dir=${src.dir}"/>
	</target>
	
	
    <!-- =================================================================== -->
    <!-- create jar file and copy jar package                                -->
   	<!-- =================================================================== -->
    <target name="deploy" depends="compile">

        <jar destfile="${build.deploy.dir}\${jar.name}">
        	<!--타겟 지정하고-->
            <fileset dir="${build.classes.dir}">
        <!-- ======================================================= -->
        <!-- TO SET : List class filenames to archive here           -->
        <!-- ======================================================= -->
				<!-- 여기서 어떤 특정 클래스만 집어넣을지 정하는 것 -->
				<include name="${pkg.base.dir}\**\*.class"/>
		   	</fileset>
        </jar>
    	
		<copy file="${build.deploy.dir}\${jar.name}"
    	            todir="D:\ant_temp"
					overwrite="true" />
    	
		<copy file="${build.deploy.dir}\${jar.name}"
    	            todir="${server.deploy.dir}"
    				overwrite="true" />
    	
		<copy file="${build.deploy.dir}\${jar.name}"
    	            todir="${final.deploy.dir}"
    				overwrite="true" />
   
        <echo message="BUILD-DIR ... ${build.deploy.dir}"/>
        <echo message="COPY TO SERVER DEPLOY ... ${server.deploy.dir}"/>
    	
    </target>

	
	<!-- =================================================================== -->
    <!-- Copy web.xml and properties file                                    -->
    <!-- =================================================================== -->
    
   
    <target name="copy" depends="deploy">

    	<copy file="${base.webinf.dir}\web.xml"
    	            todir="${server.webinf.dir}"
    				overwrite="true" />
    	
    	<copy file="${base.conf.dir}\dbpool.properties"
    	            todir="${server.classes.dir}"
    				overwrite="true"/>

    	<copy file="${base.conf.dir}\system.properties"
    	            todir="${server.classes.dir}"
    				overwrite="true" />
   
    	
		<echo message="==============================================================="/>
		<echo message="============ COPY web.xml ====================================="/>
		<echo message="==============================================================="/>
        <echo message="HOME ... ${base.webinf.dir}\web.xml                            "/>
        <echo message="COPY TO SERVER ... ${server.webinf.dir}\web.xml                "/>
		<echo message="==============================================================="/>
		<echo message="============ COPY properties =================================="/>
		<echo message="==============================================================="/>
        <echo message="HOME ... ${base.conf.dir}\dbpool.properties                    "/>
        <echo message="COPY TO SERVER ... ${server.classes.dir}\dbpool.properties     "/>
        <echo message="HOME ... ${base.conf.dir}\system.properties                    "/>
        <echo message="COPY TO SERVER ... ${server.classes.dir}\system.properties     "/>
    </target>
	

	
	<!-- =================================================================== -->
    <!-- Cleans up all the generated stuffs                                  -->
    <!-- =================================================================== -->
    
    <!--
    <target name="clean.all" depends="deploy.echo">
        <delete dir="${build.dir}"/>
    </target>
    -->


</project>

